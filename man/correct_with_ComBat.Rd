% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/correct_batch_effects.R
\name{correct_with_ComBat}
\alias{correct_with_ComBat}
\title{Adjusts for discrete batch effects using ComBat}
\usage{
correct_with_ComBat(df_long, sample_annotation = NULL,
  feature_id_col = "peptide_group_label", measure_col = "Intensity",
  sample_id_col = "FullRunName", batch_col = "MS_batch",
  par.prior = TRUE)
}
\arguments{
\item{df_long}{data frame where each row is a single feature in a single
sample. It minimally has a \code{sample_id_col}, a \code{feature_id_col} and a
\code{measure_col}, but usually also an \code{m_score} (in OpenSWATH output result
file). See "example_proteome" for more details (to call the description, use \code{help("example_proteome")})}

\item{sample_annotation}{data frame with: \enumerate{ \item \code{sample_id_col}
(this can be repeated as row names) \item biological covariates \item
technical covariates (batches etc) }. 
See "example_sample_annotation" for example with the detailed description (to call it, use \code{help("example_sample_annotation")})}

\item{feature_id_col}{name of the column with feature/gene/peptide/protein
ID used in the long format representation \code{df_long}. In the wide
formatted representation \code{data_matrix} this corresponds to the row
names.}

\item{measure_col}{if \code{df_long} is among the parameters, it is the
column with expression/abundance/intensity; otherwise, it is used
internally for consistency.}

\item{sample_id_col}{name of the column in \code{sample_annotation} table, where the
filenames (colnames of the data matrix are found).}

\item{batch_col}{column in \code{sample_annotation} that should be used for
batch comparison}

\item{par.prior}{whether parametrical or non-parametrical prior should be used}
}
\value{
\code{data_matrix}-size data matrix with batch-effect corrected by
  \code{ComBat}
}
\description{
Standardized input-output ComBat normalization ComBat allows users to adjust
for batch effects in datasets where the batch covariate is known, using
methodology described in Johnson et al. 2007. It uses either parametric or
non-parametric empirical Bayes frameworks for adjusting data for batch
effects. Users are returned an expression matrix that has been corrected for
batch effects. The input data are assumed to be free of missing values
 and normalized before batch effect removal. Please note that missing values 
 are common in proteomics, which is why in some cases corrections like 
 \code{center_peptide_batch_medians} are more appropriate.
}
\examples{
combat_corrected_matrix <- correct_with_ComBat(
example_proteome_matrix, example_sample_annotation)

}
